# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - name: 0. Prerequisities
      run: sudo apt-get install -y git build-essential autoconf cmake libglu1-mesa-dev libgtk-3-dev libdbus-1-dev
    - name: 1. Cloning the repository
      uses: actions/checkout@v3
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}
    - name: Determine dependency hash
      id: dephash
      run: echo dephash=$(git rev-parse HEAD:deps) >> $GITHUB_OUTPUT
    - name: Cache Dependencies
      id: cache-dependencies
      uses: actions/cache@v3
      with:
        path: deps/build/destdir
        key: dependencycache-${{ runner.os }}-${{ steps.dephash.outputs.dephash }}
    - name: Cache Download Files
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-download
      uses: actions/cache@v3
      with:
        path: deps/download
        key: downloadcache-${{ runner.os }}-${{ github.run_id }}
        restore-keys: |
          downloadcache-${{ runner.os }}
    - name: 2. Building dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        cd deps
        mkdir -p build
        cd build
        cmake .. -DDEP_WX_GTK3=ON -DDEP_DOWNLOAD_DIR=$(pwd)/../download
        make
        cd ../..
    - name: 3. Building PrusaSlicer
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        mkdir build
        cd build
        cmake .. -DSLIC3R_STATIC=1 -DSLIC3R_GTK=3 -DSLIC3R_PCH=OFF -DCMAKE_PREFIX_PATH=$(pwd)/../deps/build/destdir/usr/local
        make -j $(nproc)
    - name: Make directory and copy output to it
      working-directory: build 
      run: |
        mkdir -p PrusaSlicer+linux-x64-GTK3/bin
        cp src/prusa-slicer PrusaSlicer+linux-x64-GTK3/bin/
        cp src/prusa-gcodeviewer PrusaSlicer+linux-x64-GTK3/bin/
        cp src/OCCTWrapper.so PrusaSlicer+linux-x64-GTK3/bin/
        ln -s PrusaSlicer+linux-x64-GTK3/bin/prusa-slicer PrusaSlicer+linux-x64-GTK3/prusa-slicer
        ln -s PrusaSlicer+linux-x64-GTK3/bin/prusa-gcodeviewer PrusaSlicer+linux-x64-GTK3/prusa-gcodeviewer
        tar -czvf PrusaSlicer+linux-x64-GTK3.tar.gz PrusaSlicer+linux-x64-GTK3
    - name: 4. Upload Binary
      uses: actions/upload-artifact@v3
      with:
        name: linux-binary
        path: build/PrusaSlicer+linux-x64-GTK3.tar.gz
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}
    - name: Determine dependency hash
      id: dephash
      run: echo dephash=$(git rev-parse HEAD:deps) >> $GITHUB_OUTPUT
    - name: Cache Dependencies
      id: cache-dependencies
      uses: actions/cache@v3
      with:
        path: deps/build/destdir
        key: dependencycache-${{ runner.os }}-${{ steps.dephash.outputs.dephash }}
    - name: Cache Download Files
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-download
      uses: actions/cache@v3
      with:
        path: deps/download
        key: downloadcache-${{ runner.os }}-${{ github.run_id }}
        restore-keys: |
          downloadcache-${{ runner.os }}
    - name: Dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        export LIBRARY_PATH=$LIBRARY_PATH:$(brew --prefix zstd)/lib/
        cd deps
        mkdir build
        cd build
        cmake .. -DDEP_DOWNLOAD_DIR=$(pwd)/../download
        make
        cd ../..
    - name: Building PrusaSlicer
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        export LIBRARY_PATH=$LIBRARY_PATH:$(brew --prefix zstd)/lib/
        mkdir build
        cd build
        cmake .. -DCMAKE_PREFIX_PATH=$(pwd)/../deps/build/destdir/usr/local
        make -j $(sysctl -n hw.logicalcpu)
    - name: List build directory
      run: ls -al build
    - name: List src directory
      run: ls -al build/src  
    - name: 4. Upload Binary
      uses: actions/upload-artifact@v3
      with:
        name: macos-binary
        path: build/src/prusa-slicer
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Relocate workspace
      run: |
        md c:\PrusaSlicer
        xcopy . c:\PrusaSlicer /s/h
    - name: Determine dependency hash
      id: dephash
      run: echo dephash=$(git rev-parse HEAD:deps) >> $GITHUB_OUTPUT
    - name: Determine checkout directory
      id: cwd
      run: echo cwd=$(cd) >> $GITHUB_OUTPUT
    - name: Configure pagefile
      uses: al-cheb/configure-pagefile-action@v1.2
      with:
        minimum-size: 8GB
        maximum-size: 16GB
        disk-root: "C:"
    #- name: Set up pagefile
    #    run: |
    #      (Get-CimInstance Win32_PageFileUsage).AllocatedBaseSize
    - name: Run the automatic build script
      working-directory: c:\PrusaSlicer
      run: ./build_win.bat -d=..\PrusaSlicer-deps -r=none -v 17
    - name: Print files
      working-directory: c:\PrusaSlicer
      run: dir .
    - name: Make directory and copy output to it
      working-directory: c:\
      run: |
        md package
        md package\mesa
        xcopy /RCYIE PrusaSlicer-deps\usr\local\bin\vcruntime140.dll package\
        xcopy /RCYIE PrusaSlicer-deps\usr\local\bin\vcruntime140_1.dll package\
        xcopy /RCYIE PrusaSlicer-deps\usr\local\bin\msvcp140.dll package\
        xcopy /RCYIE PrusaSlicer-deps\usr\local\bin\msvcp140_codecvt_ids.dll package\
        xcopy /RCYIE PrusaSlicer\build\src\RelWithDebInfo\*.dll package\
        xcopy /RCYIE PrusaSlicer\build\src\RelWithDebInfo\*.exe package\
        xcopy /RCYIE PrusaSlicer\build\src\RelWithDebInfo\resources package\
        xcopy /RCYIE c:\windows\system32\opengl32* package\mesa\
        xcopy /RCYIE PrusaSlicer\resources package\resources
    - name: Rename and zip
      working-directory: c:\
      shell: powershell
      run: | 
        Rename-Item c:\package c:\PrusaSlicer_win64
        Compress-Archive -Path c:\PrusaSlicer_win64 -DestinationPath c:\PrusaSlicer_win64.zip
    - name: 4. Upload Binary
      uses: actions/upload-artifact@v3
      with:
        name: win-binary
        path: c:\PrusaSlicer_win64.zip
